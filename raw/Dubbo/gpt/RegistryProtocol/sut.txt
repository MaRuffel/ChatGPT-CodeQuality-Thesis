        @Override
        public void unexport() {
            String key = getCacheKey(this.originInvoker);
            bounds.remove(key);

            Registry registry = RegistryProtocol.this.getRegistry(getRegistryUrl(originInvoker));
            try {
                registry.unregister(registerUrl);
            } catch (Throwable t) {
                logger.warn(INTERNAL_ERROR, "unknown error in registry module", "", t.getMessage(), t);
            }
            try {
                if (subscribeUrl != null) {
                    Map<URL, Set<NotifyListener>> overrideListeners = getProviderConfigurationListener(subscribeUrl).getOverrideListeners();
                    Set<NotifyListener> listeners = overrideListeners.get(subscribeUrl);
                    if(listeners != null){
                        if (listeners.remove(notifyListener)) {
                            if (!registry.isServiceDiscovery()) {
                                registry.unsubscribe(subscribeUrl, notifyListener);
                            }
                            ApplicationModel applicationModel = getApplicationModel(registerUrl.getScopeModel());
                            if (applicationModel.getModelEnvironment().getConfiguration().convert(Boolean.class, ENABLE_CONFIGURATION_LISTEN, true)) {
                                for (ModuleModel moduleModel : applicationModel.getPubModuleModels()) {
                                    if (moduleModel.getServiceRepository().getExportedServices().size() > 0) {
                                        moduleModel.getExtensionLoader(GovernanceRuleRepository.class).getDefaultExtension()
                                            .removeListener(subscribeUrl.getServiceKey() + CONFIGURATORS_SUFFIX,
                                                serviceConfigurationListeners.remove(subscribeUrl.getServiceKey()));
                                    }
                                }
                            }
                        }
                        if (listeners.isEmpty()) {
                            overrideListeners.remove(subscribeUrl);
                        }
                    }
                }
            } catch (Throwable t) {
                logger.warn(INTERNAL_ERROR, "unknown error in registry module", "", t.getMessage(), t);
            }

            //TODO wait for shutdown timeout is a bit strange
            int timeout = DEFAULT_SERVER_SHUTDOWN_TIMEOUT;
            if (subscribeUrl != null) {
                timeout = ConfigurationUtils.getServerShutdownTimeout(subscribeUrl.getScopeModel());
            }
            executor.schedule(() -> {
                try {
                    exporter.unexport();
                } catch (Throwable t) {
                    logger.warn(INTERNAL_ERROR, "unknown error in registry module", "", t.getMessage(), t);
                }
            }, timeout, TimeUnit.MILLISECONDS);
        }