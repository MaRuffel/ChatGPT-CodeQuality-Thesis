private void receive(String msg, InetSocketAddress remoteAddress) {
    try {
        if (StringUtils.isNotBlank(msg)) {
            if (msg.startsWith(REGISTER)) {
                URL url = URL.valueOf(msg.substring(REGISTER.length()).trim());
                registered(url);
            } else if (msg.startsWith(UNREGISTER)) {
                URL url = URL.valueOf(msg.substring(UNREGISTER.length()).trim());
                unregistered(url);
            } else if (msg.startsWith(SUBSCRIBE)) {
                URL url = URL.valueOf(msg.substring(SUBSCRIBE.length()).trim());
                Set<URL> urls = getRegistered();
                if (StringUtils.isNotBlank(urls)) {
                    for (URL u : urls) {
                        if (UrlUtils.isMatch(url, u)) {
                            String host = remoteAddress != null && remoteAddress.getAddress() != null ? remoteAddress.getAddress().getHostAddress() : url.getIp();
                            if (url.getParameter("unicast", true) && !NetUtils.getLocalHost().equals(host)) {
                                unicast(REGISTER + " " + u.toFullString(), host);
                            } else {
                                multicast(REGISTER + " " + u.toFullString());
                            }
                        }
                    }
                }
            } else if (msg.startsWith(UNSUBSCRIBE)) {
                // Do nothing
            } else {
                logger.warn(String.format("Unknown multicast message received: %s from %s", msg, remoteAddress));
            }
        }
    } catch (Exception e) {
        logger.error("Error while parsing multicast message: " + msg, e);
    }
}
